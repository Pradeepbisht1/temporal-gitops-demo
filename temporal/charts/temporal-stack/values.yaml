temporal:
  cassandra: { enabled: false }
  elasticsearch: { enabled: false }
  mysql: { enabled: false }

  server:
    # DSNs still come from secrets via env
    config:
      persistence:
        default:
          driver: sql
          sql:
            driver: postgres12
            dsn: ${SQL_DEFAULT_DSN}
            maxConns: 20
            maxConnLifetime: 1h
        visibility:
          driver: sql
          sql:
            driver: postgres12
            dsn: ${SQL_VISIBILITY_DSN}
            maxConns: 20
            maxConnLifetime: 1h

    command: ["temporal-server"]
    # Use equals form to avoid any arg parsing weirdness
    args: ["start","--config=/etc/temporal/config/config_template.yaml"]

    additionalEnv:
      - name: TEMPORAL_CONFIG_DIR
        value: /etc/temporal/config
      - name: SQL_DEFAULT_DSN
        valueFrom: { secretKeyRef: { name: temporal-sql-secrets, key: default.sql.dsn } }
      - name: SQL_VISIBILITY_DSN
        valueFrom: { secretKeyRef: { name: temporal-sql-secrets, key: visibility.sql.dsn } }

  # Each split deployment must pin its own service
  frontend:
    command: ["temporal-server"]
    args:
      ["start","--config=/etc/temporal/config/config_template.yaml","--service","frontend"]
    additionalEnv:
      - { name: TEMPORAL_CONFIG_DIR, value: /etc/temporal/config }

  history:
    command: ["temporal-server"]
    args:
      ["start","--config=/etc/temporal/config/config_template.yaml","--service","history"]
    additionalEnv:
      - { name: TEMPORAL_CONFIG_DIR, value: /etc/temporal/config }

  matching:
    command: ["temporal-server"]
    args:
      ["start","--config=/etc/temporal/config/config_template.yaml","--service","matching"]
    additionalEnv:
      - { name: TEMPORAL_CONFIG_DIR, value: /etc/temporal/config }

  worker:
    command: ["temporal-server"]
    args:
      ["start","--config=/etc/temporal/config/config_template.yaml","--service","worker"]
    additionalEnv:
      - { name: TEMPORAL_CONFIG_DIR, value: /etc/temporal/config }

prometheus:
  nodeExporter:
    enabled: false
