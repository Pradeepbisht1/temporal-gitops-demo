# --- temporal/charts/temporal-stack/values.yaml ---

nameOverride: temporal-ha
fullnameOverride: temporal-ha

# Disable non-SQL backends
cassandra:
  enabled: false

elasticsearch:
  enabled: false

mysql:
  enabled: false

prometheus:
  enabled: true
  # OPTIONAL: node-exporter tolerations/affinityâ€”keep or drop based on your cluster
  nodeExporter:
    tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      - operator: "Exists"
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values: ["fargate"]
                - key: kubernetes.io/os
                  operator: In
                  values: ["linux"]

grafana:
  enabled: false

server:
  replicaCount: 3
  podDisruptionBudget:
    enabled: true
    minAvailable: 1

  # Load app DSNs from the normal user secret
  envFrom:
    - secretRef:
        name: temporal-sql-secrets

  # Use SQL (Postgres) persistence via Helm values
  config:
    persistence:
      default:
        driver: sql
        sql:
          # postgres / postgres12 both work with current chart; prefer postgres
          driver: postgres
          dsn: ${SQL_DEFAULT_DSN}
          maxConns: 20
          maxConnLifetime: 1h
      visibility:
        driver: sql
        sql:
          driver: postgres
          dsn: ${SQL_VISIBILITY_DSN}
          maxConns: 20
          maxConnLifetime: 1h

# Run Postgres schema jobs and let Helm create DBs using the admin DSN
schema:
  createDatabase:
    enabled: true
    envFrom:
      - secretRef:
          name: temporal-sql-secrets-admin
  setup:
    enabled: true
    envFrom:
      - secretRef:
          name: temporal-sql-secrets
  update:
    enabled: true
    envFrom:
      - secretRef:
          name: temporal-sql-secrets

web:
  enabled: true
  replicaCount: 2
  service:
    type: ClusterIP
