# Cassandra/ES disable
cassandra:
  enabled: false

elasticsearch:
  enabled: false

# Temporal server uses SQL (Postgres)
server:
  config:
    persistence:
      default:
        driver: "sql"
        sql:
          driver: "postgres"
      visibility:
        driver: "sql"
        sql:
          driver: "postgres"

# Run Postgres schema jobs, wire secrets
schema:
  createDatabase:
    enabled: true
    envFrom:
      - secretRef:
          name: temporal-sql-secrets-admin
  setup:
    enabled: true
    envFrom:
      - secretRef:
          name: temporal-sql-secrets
  update:
    enabled: true
    envFrom:
      - secretRef:
          name: temporal-sql-secrets

prometheus:
  nodeExporter:
    # Keep broad tolerations so it can land on tainted nodes if needed
    tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      - operator: "Exists"

    # IMPORTANT: remove any previous nodeSelector you added
    # nodeSelector: {}  # (ensure no eks.amazonaws.com/compute-type here)

    # Exclude Fargate nodes using nodeAffinity (EC2 nodes will match)
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values: ["fargate"]
                - key: kubernetes.io/os
                  operator: In
                  values: ["linux"]

    # (Optional) make it easier to schedule on busy nodes
    resources:
      requests:
        cpu: 20m
        memory: 30Mi

